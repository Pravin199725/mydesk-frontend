{"version":3,"sources":["webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.module.ts"],"names":["routes","path","component","LoginRoutingModule","forChild","imports","exports","LoginComponent","formBuilder","authService","socialAuthService","storageService","router","submitted","errors","loginForm","group","email","required","password","minLength","invalid","login","value","subscribe","user","setData","navigate","error","hasOwnProperty","non_field_errors","console","log","authState","signIn","PROVIDER_ID","then","controls","signInWithFB","signInWithGoogle","selector","templateUrl","styleUrls","LoginModule","provide","useValue","autoLogin","providers","id","provider","declarations"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FacebookLoginProvider, GoogleLoginProvider, SocialAuthService } from 'angularx-social-login';\nimport { AuthService } from '../services/auth/auth.service';\nimport { StorageService } from '../services/storage/storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  errors: any[] = [];\n\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private socialAuthService: SocialAuthService,\n    private storageService: StorageService,\n    private router: Router) {\n\n   }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    })\n\n\n  }\n\n  get f() { return this.loginForm.controls; }\n\n\n  login() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.authService.login(this.loginForm.value).subscribe((user) => {\n      this.errors = [];\n      this.storageService.setData('userData', user);\n      this.router.navigate(['/student/home']);\n    }, (error) => {\n      if(error.error.hasOwnProperty('non_field_errors')) {\n        this.errors = error.error.non_field_errors;\n      }\n      console.log('error', error);\n    });\n\n    this.socialAuthService.authState.subscribe((user) => {\n      console.log('user login', user)\n    });\n\n  }\n\n  signInWithGoogle(): void {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then((user) => {\n      console.log('user', user)\n    }).catch((error) => {\n      console.log('error', error)\n    });\n  }\n \n  signInWithFB(): void {\n    this.socialAuthService.signIn(FacebookLoginProvider.PROVIDER_ID).then((user) => {\n      console.log('user', user)\n    }).catch((error) => {\n      console.log('error', error)\n    });\n  }\n \n\n}\n","<div class=\"d-flex justify-content-center bg-login-box\">\n    <div class=\"card d-flex w-45 align-self-center c-login-card\">\n        <div class=\"card-body c-login-inner-card\">\n            <div class=\"text-center\">\n                <h5 class=\"card-title\">\n                    My Desk\n                </h5>\n                <div class=\"alert alert-danger text-left\" role=\"alert\" *ngIf=\"errors.length > 0\">\n                    <h6>Errors!</h6>\n                    <li *ngFor=\"let error of errors\">{{error}}</li>\n                </div>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"d-flex flex-column align-items-center\">\n                    <label class=\"mr-auto fw-700\">Email</label>\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback text-left\">\n                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                        <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                    </div>\n                    <label class=\"mr-auto fw-700 mt-3\">Password</label>\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback text-left\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                        <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                    </div>\n                    <button name=\"signin\" class=\"btn btn-primary1 px-5 py-2 mt-3\">SIGN IN</button>\n                </form>\n                <h4 class=\"mt-3 mb-3\">OR</h4>\n                <div class=\"text-center\">\n                    <button type=\"button\" (click)=\"signInWithFB()\" class=\"btn btn-primary mr-4\">Sign In With\n                        Facebook</button>\n                    <button type=\"button\" (click)=\"signInWithGoogle()\" class=\"btn btn-danger\">Sign In With Google\n                        </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LoginComponent } from './login.component';\n\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\nimport {\n  GoogleLoginProvider,\n  FacebookLoginProvider\n} from 'angularx-social-login';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule,\n    SocialLoginModule\n  ],\n  providers: [\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '4814848901-m6t676c7bmmn5lj0ucrpuijc40khksc3.apps.googleusercontent.com'\n            ),\n          },\n          {\n            id: FacebookLoginProvider.PROVIDER_ID,\n            provider: new FacebookLoginProvider('998377990680624'),\n          },\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ]\n})\nexport class LoginModule { }\n"]}